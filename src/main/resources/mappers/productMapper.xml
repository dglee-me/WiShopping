<?xml version="1.0" encoding="UTF-8"?>

<!-- DTD 선언 -->
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="productMapper">
	<select id="subCategoryList" resultType="com.lee.myapp.domain.CategoryVO">
		SELECT *
		  FROM TBL_CATEGORY
		 WHERE CREF = #{category1}
		   AND DEPTH = 2
	</select>

	<!-- Category Register -->
	<insert id="register">
		INSERT ALL
		INTO PRODUCT(PNO,CATEGORY1,CATEGORY2,PNAME,BRAND,PRICE,PRODUCT_URL,PRODUCT_THUMURL,SHIPPING_FEE,SHIPPING_DAY, RETURN_FEE, RETURN_PLACE) 
			VALUES(pno_seq.nextval,#{category1},#{category2},#{pname},(SELECT BRAND FROM TBL_SELLER WHERE MNO = #{mno}),#{price},#{producturl},#{productthumurl},#{shippingfee},#{shippingday},#{returnfee},#{returnplace})
		INTO TBL_SALES_VOLUME VALUES(TBL_SALES_VOLUME_SEQ.NEXTVAL,PNO_SEQ.CURRVAL,0)
		SELECT * FROM DUAL
	</insert>
	
	<insert id="register_option">
		<if test='pno == 0'>
			INSERT INTO TBL_PRODUCT_OPTION(ONO,PNO,OPTION_COLOR,OPTION_SIZE,INVENTORY)
			VALUES(ONO_SEQ.NEXTVAL,PNO_SEQ.CURRVAL,#{optioncolor},#{optionsize},#{inventory})
		</if>
		<if test='pno != 0'>
			INSERT INTO TBL_PRODUCT_OPTION(ONO,PNO,OPTION_COLOR,OPTION_SIZE,INVENTORY)
			VALUES(ONO_SEQ.NEXTVAL,#{pno},#{optioncolor},#{optionsize},#{inventory})
		</if>
	</insert>
	
	<!-- Product list -->
	<select id="list" resultType="com.lee.myapp.domain.ProductVO">
		SELECT *
		  FROM PRODUCT
		 <if test='category2 != null'>
			 WHERE CATEGORY1 = (SELECT CNAME FROM TBL_CATEGORY WHERE CLASSIFY = #{category1} AND DEPTH = 1)
   			   AND CATEGORY2 = (SELECT CNAME FROM TBL_CATEGORY WHERE CLASSIFY = #{category2} AND CREF = #{category1} AND DEPTH = 2)
		 </if>
		 <if test='category2 == null'>
			 WHERE CATEGORY1 = (SELECT CNAME FROM TBL_CATEGORY WHERE CLASSIFY = #{category1} AND DEPTH = 1)
		 </if>
		 ORDER BY PNO DESC
	</select>
	
	<select id="view" resultType="com.lee.myapp.domain.ProductVO">
		SELECT A.PNO, A.CATEGORY1, A.CATEGORY2, A.PNAME, A.BRAND, A.PRICE, A.PRODUCT_THUMURL, A.PRODUCT_URL, A.SHIPPING_FEE, A.SHIPPING_DAY, A.RETURN_FEE, A.RETURN_PLACE, NVL(B.IS_SELLER,0) AS IS_SELLER
		  FROM PRODUCT A LEFT OUTER JOIN (SELECT BRAND, COUNT(BRAND) AS IS_SELLER FROM TBL_SELLER WHERE MNO = #{mno} GROUP BY BRAND) B ON A.BRAND = B.BRAND
		 WHERE PNO = #{pno}
	</select>
	
	<select id="view_option" resultType="com.lee.myapp.domain.ProductOptionVO">
		SELECT ONO, ROW_NUMBER() OVER(ORDER BY ONO ASC) AS SEQUENCE, PNO, OPTION_COLOR, OPTION_SIZE, INVENTORY
		  FROM TBL_PRODUCT_OPTION
		 WHERE PNO = #{pno}
		 ORDER BY ONO ASC
	</select>
	
	<select id="checkInventory" resultType="int">
		SELECT INVENTORY 
		  FROM TBL_PRODUCT_OPTION
		 WHERE ONO = #{ono}
	</select>
	
	<select id="isSeller" resultType="Integer">
		SELECT COUNT(SNO) 
		  FROM TBL_SELLER
		 WHERE MNO = (SELECT MNO FROM MEMBER WHERE MNO = #{mno})
	</select>
	
	<update id="modifyProduct">
		UPDATE PRODUCT
		   SET CATEGORY1 = #{category1},
		       CATEGORY2 = #{category2},
		       PNAME = #{pname},
		       PRICE = #{price},
		       <if test="productthumurl != null">
		       PRODUCT_THUMURL = #{productthumurl},
		       </if>
		       <if test="producturl != null">
		       PRODUCT_URL = #{producturl},
		       </if>
		       SHIPPING_FEE = #{shippingfee},
		       SHIPPING_DAY = #{shippingday}
		 WHERE PNO = #{pno} AND BRAND = (SELECT BRAND FROM TBL_SELLER WHERE MNO = #{mno})
	</update>
	
	<delete id="productDelete">
		DELETE 
		  FROM PRODUCT
		 WHERE PNO = #{pno} AND BRAND = (SELECT BRAND FROM TBL_SELLER WHERE MNO = #{mno})
	</delete>
	
	<delete id="optionDelete">
		DELETE
		  FROM TBL_PRODUCT_OPTION
		 WHERE PNO = #{pno}
	</delete>
	
	<insert id="reviewRegist">
		INSERT INTO TBL_PRODUCT_REVIEW(RNO,PNO,MNO,ONO,OPTION_COLOR,OPTION_SIZE,CONTENT,CONTENT_IMG,WRITEDATE)
		VALUES(
			TBL_PRODUCT_REVIEW_RNO_SEQ.NEXTVAL, 
			#{pno}, 
			#{mno},
			#{ono},
			#{optioncolor},
			#{optionsize},
			#{content},
			#{contentimg},
			SYSDATE
		)
	</insert>
	
	<select id="reviewList" resultType="com.lee.myapp.domain.ReviewVO">
		SELECT A.RNO, A.PNO, A.MNO, (SELECT NAME FROM MEMBER WHERE MNO = B.MNO) AS NAME, A.ONO, A.OPTION_COLOR, A.OPTION_SIZE, A.CONTENT, A.WRITEDATE, A.CONTENT_IMG 
		  FROM TBL_PRODUCT_REVIEW A INNER JOIN MEMBER B ON A.MNO = B.MNO
		 WHERE A.PNO = #{pno}
		 ORDER BY A.WRITEDATE DESC
	</select>
	
	<select id="reviewListPaging" resultType="com.lee.myapp.domain.ReviewVO">
		SELECT *
		  FROM(
		       SELECT ROWNUM AS RNUM, A.*
		         FROM(
		               SELECT A.RNO, A.PNO, A.MNO, (SELECT NAME FROM MEMBER WHERE MNO = A.MNO) AS NAME, A.ONO, A.OPTION_COLOR, A.OPTION_SIZE, TO_CHAR(DBMS_LOB.SUBSTR(A.CONTENT,500)) AS CONTENT, A.WRITEDATE, A.CONTENT_IMG, NVL(B.COUNT,0) AS LIKE_COUNT, NVL(C.LIKE_CHECK,0) AS LIKE_CHECK
						 FROM TBL_PRODUCT_REVIEW A LEFT OUTER JOIN (SELECT RNO,COUNT(RNO) AS COUNT FROM TBL_PRODUCT_REVIEW_LIKE GROUP BY RNO ,LIKE_CHECK) B ON (A.RNO = B.RNO) 
						      LEFT OUTER JOIN (SELECT RNO, MNO, LIKE_CHECK FROM TBL_PRODUCT_REVIEW_LIKE WHERE MNO = #{mno}) C ON (B.RNO = C.RNO)
						WHERE A.PNO = #{pno}
					    GROUP BY A.RNO, A.PNO, A.MNO, A.ONO, A.OPTION_COLOR, A.OPTION_SIZE, TO_CHAR(DBMS_LOB.SUBSTR(A.CONTENT, 500)), A.WRITEDATE, A.CONTENT_IMG, B.COUNT, C.LIKE_CHECK
					     <if test='order == "" || order == null'>
							ORDER BY LIKE_COUNT DESC, RNO DESC
					    </if>
						 <if test='order == "best"'>
							ORDER BY LIKE_COUNT DESC, RNO DESC
					    </if>
					    <if test='order == "desc"'>
							ORDER BY RNO DESC
					    </if>
		             ) A
	<![CDATA[  WHERE ROWNUM <= #{rowEnd}
		       )
		  WHERE RNUM >= #{rowStart}
		 ]]>
	</select>
	
	<select id="reviewListCount" resultType="Integer">
		SELECT COUNT(*)
		  FROM TBL_PRODUCT_REVIEW
		 WHERE PNO = #{pno}
	</select>
	
	<select id="reviewLike" resultType="com.lee.myapp.domain.ReviewLikeVO">
		SELECT A.RNO, B.LIKE_CHECK
		  FROM TBL_PRODUCT_REVIEW A INNER JOIN TBL_PRODUCT_REVIEW_LIKE B ON A.RNO = B.RNO
		 WHERE A.PNO = #{pno} AND B.MNO = #{mno}
	</select>
	
	<select id="reviewLikeCount" resultType="com.lee.myapp.domain.ReviewLikeVO">
		SELECT B.RNO, COUNT(*) AS COUNT
		  FROM TBL_PRODUCT_REVIEW A INNER JOIN TBL_PRODUCT_REVIEW_LIKE B ON A.RNO = B.RNO
		 WHERE A.PNO = #{pno}
		 GROUP BY B.RNO
         ORDER BY B.RNO DESC
	</select>
	
	<update id="updateReviewStatus">
		 UPDATE TBL_ORDER_DETAIL
		    SET REVIEW_STATUS = 1
		  WHERE ONO = #{ono} AND ORDERNO = #{orderno}
	</update>
	
	<select id="checkLike" resultType="Integer">
		SELECT COUNT(*)
		  FROM TBL_PRODUCT_REVIEW_LIKE
		 WHERE MNO = #{mno} AND RNO = #{rno}
	</select>
	
	<insert id="registLike">
		INSERT INTO TBL_PRODUCT_REVIEW_LIKE VALUES(TBL_PRODUCT_REVIEW_LIKE_SEQ.NEXTVAL,#{rno},#{mno},1)
	</insert>
	
	<delete id="deleteLike">
		DELETE 
		  FROM TBL_PRODUCT_REVIEW_LIKE
		 WHERE MNO = #{mno} AND RNO = #{rno}
	</delete>
	
	<!-- Product Question and answer -->
	<insert id="questionRegist">
		INSERT INTO TBL_PRODUCT_QUESTION(QNO, PNO, MNO, CATEGORY, CONTENT, WRITEDATE, ISSECRET, STATUS)
		VALUES(TBL_PRODUCT_QUESTION_QNO_SEQ.NEXTVAL, #{pno}, #{mno}, #{category}, #{content}, SYSDATE, #{issecret}, 0)
	</insert>
	
	<insert id="answerRegist">
		INSERT INTO TBL_PRODUCT_ANSWER(ANO, QNO, SNO, BRAND, ANSWER, ANSWERDATE)
		VALUES(TBL_PRODUCT_ANSWER_ANO_SEQ.NEXTVAL, #{qno}, (SELECT SNO FROM TBL_SELLER WHERE MNO = #{mno}), (SELECT BRAND FROM TBL_SELLER WHERE MNO = #{mno}), #{answer}, SYSDATE)
	</insert>
	
	<select id="questionList" resultType="com.lee.myapp.domain.ProductQuestionVO">
	<![CDATA[
		 SELECT *
		   FROM(
		        SELECT ROWNUM AS RNUM, A.*
		          FROM(
		               SELECT A.QNO, A.MNO, (SELECT NAME FROM MEMBER WHERE MNO = A.MNO) AS NAME ,A.CATEGORY, A.CONTENT, A.WRITEDATE, A.ISSECRET, A.STATUS, B.ANO , B.BRAND, B.ANSWERDATE, B.ANSWER
		                 FROM TBL_PRODUCT_QUESTION A LEFT OUTER JOIN TBL_PRODUCT_ANSWER B ON A.QNO = B.QNO
		                 WHERE A.PNO = #{pno}
		                 ORDER BY QNO DESC
		              ) A
		          WHERE ROWNUM <= #{rowEnd}
		  )
		  WHERE RNUM >= #{rowStart}
	]]>
	</select>
	
	<select id="questionListCount" resultType="Integer">
		SELECT COUNT(*)
		  FROM TBL_PRODUCT_QUESTION
		 WHERE PNO = #{pno}
	</select>
	
	<update id="questionStatusUpdate">
		UPDATE TBL_PRODUCT_QUESTION
		   SET STATUS = 1
		 WHERE QNO = #{qno}
	</update>
	
	<delete id="questionDelete">
		DELETE
  		  FROM TBL_PRODUCT_QUESTION
  		 WHERE QNO = #{qno}
	</delete>
	
	<delete id="answerDelete">
		DELETE
		  FROM TBL_PRODUCT_ANSWER
		 WHERE ANO = #{ano} AND QNO = #{qno} AND BRAND = (SELECT BRAND FROM TBL_SELLER WHERE MNO = #{mno})
	</delete>
	
	<!-- Category list -->
	<select id="categoryList" resultType="com.lee.myapp.domain.CategoryVO">
		SELECT *
		  FROM TBL_CATEGORY
		 WHERE DEPTH = 1
	</select>
	
	<select id="selectCategoryList" resultType="com.lee.myapp.domain.CategoryVO">
		SELECT CNAME, CLASSIFY, NVL(B.IS_SELECT,0) AS IS_SELECT
		  FROM TBL_CATEGORY A LEFT OUTER JOIN (SELECT COUNT(*) AS IS_SELECT, CNO FROM TBL_CATEGORY WHERE DEPTH = 1 AND CLASSIFY = #{category1} GROUP BY CNO) B ON A.CNO = B.CNO
		 WHERE DEPTH = 1
	</select>
	
	<select id="selectSubCategory" resultType="com.lee.myapp.domain.CategoryVO">
		SELECT *
		  FROM TBL_CATEGORY
		 WHERE DEPTH = 2 AND CREF = #{category1} AND CLASSIFY = #{category2}
	</select>
	
	<!-- Header banner -->
	<select id="mainBannerList" resultType="com.lee.myapp.domain.BannerVO">
		SELECT *
		  FROM TBl_BANNER
		 WHERE BANNER_STATUS = 1
		   AND AREA = #{area}
		 ORDER BY BNO DESC
	</select>
</mapper>